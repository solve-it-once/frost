/**
 * @file
 * Tag-level, tables, forms, and other base styling.
 */

/**
 * Font family declarations, all in one place and early.
 *
 * Let's keep all font-family calls right here, so it's manageable. Even classes
 * if necessary.
 */
html,
button,
input,
select,
textarea {
  font-family: var(--font-family--input);
}

body,
.font-family--primary {
  font-family: var(--font-family--primary);
}

/**
 * Often the headings and other sparing elements take a second font family.
 *
 * CSSLint and other tools might squawk at double-declaring <h*> tags, but this
 * puts all the font-family declarations in one place, which feels good.
 */
h1,
h2,
h3,
h4,
.font-family--secondary {
  font-family: var(--font-family--secondary);
  letter-spacing: 0.03em;
}

/**
 * Some sites have Monospace text for code samples and the like.
 */
code,
kbd,
pre,
samp,
.font-family--monospace {
  font-family: var(--font-family--monospace);
}

/**
 * Set HTML5 elements to block, in case a browser doesn't do this.
 */
article,
aside,
blockquote,
details,
figcaption,
figure,
footer,
header,
nav,
section {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  display: block;
}

/**
 * Normalize and bugfix for some HTML5 media elements.
 */
audio,
canvas,
video {
  display: inline-block;
}
audio:not([controls]),
[hidden] {
  display: none;
}
audio,
canvas,
embed,
iframe,
img,
object,
picture,
svg,
video {
  max-width: 100%;
}

/**
 * The HTML wrapping tag takes some very general styles. Normalize some rendering.
 */
html {
  font-size: 100%;
  -moz-osx-font-smoothing: grayscale;
  -ms-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeLegibility;
}

/**
 * The body tag should take the site's universal styles.
 *
 * rem is based on this font-size dec, so only change if you're sure about the
 * type scale.
 * The body line-height should be one of only a handful of [unitless] line-height
 * declarations in the CSS codebase.
 */
body {
  background-color: var(--color--white);
  color: var(--color--black);
  font-size: 16px;
  font-weight: 200;
  line-height: var(--line-height--default);
  margin: 0;
  scroll-behavior: smooth;
}
@media all and (max-width: 1023px) {
  body {
    word-wrap: break-word;
    hyphens: auto;
  }
}

/**
 * Change the transition value for folks who prefer reduced motion.
 */
@media all and (prefers-reduced-motion: reduce) {
  :root {
    --transition--default: none;
  }
}

/**
 * The main element can take a bigger font-size, since body copy should be legible.
 *
 * We set the rem size to 16px in the html/body, but want body copy to be between 18px and 22px (or more),
 * depending on the font.
 */
main,
.region--splash {
  font-size: 1.125rem;
}

/**
 * Article as a semantic element.
 */
article {
  margin: 0;
}

/**
 * Links.
 *
 * Links should have set, at a minimum, :link, :visited, :hover, :active, :focus
 *
 * We note to designers that blue links are a good signifier for the affordance.
 * Visited links in a vacuum should look different than unvisited ones.
 * Hover, active, and focus states should look different than stateless links.
 */
a {
  transition: var(--transition--default);
  text-decoration: underline;
}
a:link {
  color: var(--color--main);
}
a:visited {
  color: var(--color--second);
}
a:hover {
  color: var(--color--third);
}
a:active {
  color: var(--color--third);
}
a:focus {
  outline: 0 none;
  text-decoration: underline dotted;
}

/**
 * Abbreviations, semi-deprecated. Used in Drupal 8 and overridden here.
 */
abbr[title] {
  border-bottom: 1px dotted;
  cursor: help;
  white-space: nowrap;
}
abbr.tabledrag-changed,
abbr.ajax-changed {
  border-bottom: none;
}

/**
 * Address elements are often italicized by the user agent, so this normalizes.
 */
address {
  font-style: normal;
  text-align: left;
}

/**
 * Bold text.
 *
 * Semantically, <b> and <strong> are different, but presentationally they are
 * the same or similar.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Base blockquotes before classing.
 */
blockquote {
  font-size: 1.325em;
  font-style: italic;
  font-weight: 300;
  margin: 0;
  padding: 1em 0;
  position: relative;
}
blockquote::before {
  content: '';
}

/**
 * The monospace and <pre> elements.
 *
 * The font-family has already been declared above, so this is just the
 * text treatments.
 */
code,
kbd,
pre,
samp {
  font-size: 1em;
}
pre {
  padding: calc(2 * var(--spacing--padding-y)) calc(2 * var(--spacing--padding-x));
  white-space: pre-wrap;
  word-wrap: break-word;
}

/**
 * Definition lists. They're a big waste of time usually.
 */
dd {
  margin: 0 0 0 calc(4 * var(--spacing--margin-x));
}
dfn {
  font-style: italic;
}

/**
 * Let's give divs box-sizing: border-box so we don't have to redeclare.
 */
div {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/**
 * Figures and their captions.
 *
 * Used as wrapping elements in media-containing components.
 */
figure {
  display: inline-block;
  min-width: 1px;
  margin: 0;
  max-width: 100%;
}
figcaption {
  font-size: .75em;
}

/**
 * Headings h1-h6.
 *
 * Each set has a main declaration (plus a class for use later), then for <h1>
 * and <h2> there are @media queries to reduce their size for mobile, then
 * universal decs that make the links within headings take their color rather
 * than the default link colors.
 * All the heading elements have no margin, so spacer components are used for
 * vertical rhythm.
 */
h1,
.heading--h1 {
  font-size: clamp(3rem, 4vw, 5.5rem);
  font-weight: 350;
  hyphens: auto;
  line-height: var(--line-height--heading);
  margin: 0;
  overflow-wrap: break-word;
  word-break: break-word;
  word-wrap: break-word;
}
h1 > a:link,
h1 > a:visited {
  color: inherit;
  text-decoration: inherit;
}

/**
 * In practice, <h2> elements on the site are the same size as <h1>, except for
 * the hero on the home page.
 */
h2,
.heading--h2 {
  font-size: clamp(2.5rem, 3vw, 4rem);
  font-weight: 350;
  line-height: var(--line-height--heading);
  margin: 1.5em 0 .25em;
  overflow-wrap: break-word;
  word-break: break-word;
  word-wrap: break-word;
}
h2:first-child {
  margin-top: 0;
}
h2 > a:link,
h2 > a:visited {
  color: inherit;
  text-decoration: inherit;
}

h3,
.heading--h3 {
  font-size: clamp(2rem, 2.5vw, 3.5rem);
  font-weight: 500;
  line-height: var(--line-height--heading);
  margin: 1.5em 0 .25em;
  overflow-wrap: break-word;
  word-break: break-word;
  word-wrap: break-word;
}
h3:first-child {
  margin-top: 0;
}
h3 > a:link,
h3 > a:visited {
  color: inherit;
  text-decoration: inherit;
}

h4,
.heading--h4 {
  font-size: clamp(1.25rem, 2vw, 2.5rem);
  font-weight: 400;
  line-height: var(--line-height--heading);
  margin: 1.5em 0 .25em;
  overflow-wrap: break-word;
  word-break: break-word;
  word-wrap: break-word;
}
h4:first-child {
  margin-top: 0;
}
h4 > a:link,
h4 > a:visited {
  color: inherit;
  text-decoration: inherit;
}

h5,
.heading--h5 {
  font-size: clamp(1.125rem, 1.75vw, 2rem);
  font-weight: 500;
  line-height: var(--line-height--heading);
  margin: 1.5em 0 .25em;
}
h5:first-child {
  margin-top: 0;
}
h5 > a:link,
h5 > a:visited {
  color: inherit;
  text-decoration: inherit;
}

h6,
.heading--h6 {
  font-size: clamp(1rem, 1.5vw, 1.5rem);
  font-weight: 600;
  line-height: var(--line-height--heading);
  margin: 1.5em 0 .25em;
}
h6:first-child {
  margin-top: 0;
}
h6 > a:link,
h6 > a:visited {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Horizontal rules.
 *
 * Link other text-level elements, the <hr> has the minimal amount of acceptable
 * spacing, such that spacer components can be used for vertical rhythm.
 *
 * For cross-browser, the height is set rather than the border.
 */
hr {
  background-color: var(--color--grey-dark);
  border-width: 0;
  color: var(--color--grey-dark);
  height: 1px;
  line-height: 0;
  margin: calc(1 * var(--spacing--margin-y)) 0;
}

/**
 * iframes.
 *
 * Let's put borders on 'em, unless they don't need them in the theme.
 */
iframe {
  border: 1px solid var(--color--grey-light);
}

/**
 * Make YouTube and vimeo iframes play nice.
 */
@supports (aspect-ratio: auto) {
  iframe[src*="yout"],
  iframe[src*="vimeo"] {
    aspect-ratio: 16 / 9;
    height: auto;
  }
}

/**
 * Images.
 *
 * Since they have a max-width of 100%, the height: auto is truly important.
 * There's a render prop for old version of IE.
 * And the display and line-height props are normalize-ish for spacing.
 */
img,
picture {
  border: 0;
  display: block;
  height: auto !important;
  -ms-interpolation-mode: bicubic;
  line-height: 0;
}

mark,
.marker {
  background-color: var(--color--accent);
  border-radius: var(--border-radius--default);
  color: var(--color--white);
  font-size: 0.75em;
  font-weight: 700;
  display: inline-block;
  padding: calc(0.25 * var(--spacing--padding-y)) calc(0.5 * var(--spacing--padding-x));
}

p {
  margin: calc(1 * var(--spacing--margin-y)) 0;
  max-width: 75ch;
  overflow-wrap: break-word;
  word-wrap: break-word;
}
p:first-child {
  margin-top: 0;
}
p:last-child {
  margin-bottom: 0;
}

/**
 * Quotes, non-block.
 *
 * These might not be used in any of our sites ever, so ignore and keep moving.
 */
q {
  quotes: none;
}
q::before,
q::after {
  content: "";
}

small {
  font-size: 75%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}

/**
 * A quick normalize for SVG that I don't really understand.
 */
svg:not(:root) {
  overflow: hidden;
}

/**
 * Number and bullet lists.
 *
 * Lists are set to hang; typographically to maintain the same vertical line as
 * the rest of the text, and for the bullets to be left of the content container.
 * Lists within lists (nested) are then indented so the bullets/numbers line up
 * with the previous text, and the new text is indented.
 *
 * @see https://markboulton.co.uk/journal/five-simple-steps-to-better-typography-part-2
 */
ul,
ol {
  margin: 0 0 0 calc(1.25 * var(--spacing--margin-x));
  padding: 0;
}
ul ul,
ol ul {
  padding: 0 0 0 calc(1.25 * var(--spacing--padding-x));
}
ol ol {
  list-style-type: lower-alpha;
}
ol ol ol {
  list-style-type: lower-roman;
}

/**
 * Ensure <video> tags are responsive like <img> tags.
 */
video {
  height: auto;
}
